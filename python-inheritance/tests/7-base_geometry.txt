"""Test the class"""

"""Importing the class from the module"""
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

BG = BaseGeometry()
BG.integer_validator("my_int", 12)

'----------------------------------------------------'
>>> BG = BaseGeometry()
>>> try:
...     BG.integer_validator("my_int", -12)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] my_int must be greater than 0

>>> BG = BaseGeometry()
>>> try:
...     BG.integer_validator("my_int", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] my_int must be greater than 0

Value None

>>> BG = BaseGeometry()
>>> try:
...     BG.integer_validator("my_int", True)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] my_int must be an integer

Value no integer (boolean)

>>> BG = BaseGeometry()
>>> try:
...     BG.integer_validator("my_int", 3.24)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] my_int must be an integer

Value no integer (float)